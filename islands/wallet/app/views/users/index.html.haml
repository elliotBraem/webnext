.kc__classic_layout
  .kc__app_bar.primary.mdl-shadow--2dp
    %nav.kc__nav
      = link_to '<-', '/', class: 'kc__square_button'
      %h3= 'Account manager'
    %nav.kc__nav
      = button_to 'Create account', '/users', method: :post, class: 'mdl-button mdl-js-button'
      = link_to 'Logout', "/logout", method: :delete, class: 'mdl-button mdl-js-button'

  - unless @error.nil?
    %p= @error

  %ul.kc__list#users_list
    - @users.each do |user|

      %li.mdl-card.kc__list_item.mdl-shadow--2dp
        = form_for 'user', url: "/users/#{user.id}", method: :put do |f|
          - config = ENTITIES[:User]

          -# Username field
          - entry = config[:name]
          .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
            = f.label :name, entry[:caption], class: 'mdl-textfield__label'
            = f.text_field :name,
              value: user.name,
              pattern: ".{#{entry[:length].min},}",
              maxlength: entry[:length].max,
              required: entry[:required],
              class: 'mdl-textfield__input'
            %span.mdl-textfield__error
              Must contain from #{entry[:length].min}
              to #{entry[:length].max} symbols

          -# Optional passphrase field
          - entry = config[:passphrase]
          .mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
            = f.text_field :passphrase,
              pattern: ".{#{entry[:length].min},}",
              maxlength: entry[:length].max,
              type: 'password',
              required: false,
              class: 'mdl-textfield__input'
            = f.label :passphrase, entry[:caption], class: 'mdl-textfield__label'

          -# User access level selector
          - access_level = config[:access_level]
          - its_superuser = user.name == 'root'
          = f.label :access_level, access_level[:caption], class: ''
          - slider_class = 'disabled' if its_superuser
          .kc-slider_wrapper{ class: "#{slider_class}" }
            = f.range_field :access_level,
              min: access_level[:range].min,
              max: access_level[:range].max,
              step: access_level[:step],
              value: user.access_level,
              disabled: its_superuser,
              class: 'mdl-slider mdl-js-slider'
            .kc-slider_scale
              - scale = access_level[:range].step(access_level[:step]).to_a
              - scale.each do |division|
                %label= division

          .mdl-card__actions.mdl-card--border
            -# Form submit button
            = f.submit 'SAVE',
              class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--colored'

        -# User delete button
        = button_to 'DELETE',
          "/users/#{user.id}",
          method: :delete,
          class: 'mdl-button mdl-js-button mdl-button--raised mdl-button--accent delete-user'
